import logging
from django.conf import settings
from django.core.mail import EmailMultiAlternatives
from django.template.loader import render_to_string
from django.db.models.signals import post_save
from django.dispatch import receiver
from django_rest_passwordreset.signals import reset_password_token_created
from .models import User

# Configuration du logger
logger = logging.getLogger(__name__)

# üî• NOUVEAU : Fonction pour obtenir l'URL du frontend dynamiquement
def get_frontend_url():
    """Retourne l'URL du frontend selon l'environnement"""
    if settings.DEBUG:
        return "http://localhost:5173"  # D√©veloppement
    else:
        # En production, utilise FRONTEND_URL ou l'URL par d√©faut
        return getattr(settings, 'FRONTEND_URL', 'https://djibtrade.netlify.app')

# üîπ Signal : Token de r√©initialisation de mot de passe (VERSION CORRIG√âE)
@receiver(reset_password_token_created)
def password_reset_token_created(sender, instance, reset_password_token, *args, **kwargs):
    """
    Envoie un email HTML professionnel avec un lien cliquable pour la r√©initialisation.
    """
    try:
        # üî• CORRECTION : URL dynamique
        frontend_url = get_frontend_url()
        reset_url = f"{frontend_url}/reset-password?token={reset_password_token.key}"
        
        # Context pour le template
        context = {
            'reset_url': reset_url,
            'user': reset_password_token.user,
            'token': reset_password_token.key
        }
        
        # Rendre le template HTML
        html_content = render_to_string('email/password_reset.html', context)
        
        # Version texte pour les clients email qui ne supportent pas HTML
        text_content = f"""
        R√©initialisation de mot de passe DjibTrade
        
        Bonjour,
        
        Vous avez demand√© la r√©initialisation de votre mot de passe DjibTrade.
        
        Pour r√©initialiser votre mot de passe, cliquez sur le lien suivant :
        {reset_url}
        
        Si le lien ne fonctionne pas, copiez-collez cette URL dans votre navigateur.
        
        Si vous n'avez pas demand√© cette r√©initialisation, veuillez ignorer cet email.
        
        Ce lien expirera dans 24 heures pour des raisons de s√©curit√©.
        
        Cordialement,
        L'√©quipe DjibTrade
        """
        
        # Cr√©er l'email avec les deux versions (texte et HTML)
        msg = EmailMultiAlternatives(
            subject="R√©initialisation de votre mot de passe DjibTrade",
            body=text_content,
            from_email=settings.DEFAULT_FROM_EMAIL,
            to=[reset_password_token.user.email]
        )
        msg.attach_alternative(html_content, "text/html")
        
        # Envoyer l'email
        msg.send()
        
        logger.info(f"üì© Email de r√©initialisation envoy√© √† {reset_password_token.user.email}")
        
    except Exception as e:
        logger.error(f"‚ùå Erreur lors de l'envoi de l'email de reset : {e}")

# üîπ Signal : Envoi d'email de bienvenue apr√®s inscription (VERSION CORRIG√âE)
@receiver(post_save, sender=User)
def send_welcome_email(sender, instance, created, **kwargs):
    """
    Envoie un email de bienvenue HTML lorsqu'un nouvel utilisateur est cr√©√©.
    """
    if created:
        logger.info(f"üéâ Nouvel utilisateur cr√©√© : {instance.email} ({instance.role})")

        try:
            # üî• CORRECTION : URL dynamique
            frontend_url = get_frontend_url()
            
            # Context pour le template de bienvenue
            context = {
                'user': instance,
                'company_name': instance.company_name,
                'login_url': f"{frontend_url}/login"
            }
            
            # Rendre le template HTML
            html_content = render_to_string('email/welcome.html', context)
            
            # Version texte
            text_content = f"""
            Bonjour {instance.company_name},

            Bienvenue sur Djibtrade ! Nous sommes ravis de vous compter parmi nous.
            
            Vous pouvez maintenant vous connecter et publier vos annonces :
            {frontend_url}/login
            
            √Ä tr√®s bient√¥t,
            L'√©quipe Djibtrade
            """
            
            # Cr√©er l'email
            msg = EmailMultiAlternatives(
                subject="Bienvenue sur Djibtrade üéâ",
                body=text_content,
                from_email=settings.DEFAULT_FROM_EMAIL,
                to=[instance.email]
            )
            msg.attach_alternative(html_content, "text/html")
            
            # Envoyer l'email
            msg.send()
            
            logger.info(f"üì© Email de bienvenue envoy√© √† {instance.email}")
            
        except Exception as e:
            logger.error(f"‚ùå Erreur lors de l'envoi de l'email de bienvenue : {e}")